# ==========================================
# Dockerfile para DESARROLLO
# ==========================================

# Stage para herramientas Node.js
FROM node:18-alpine AS node-tools

WORKDIR /app
COPY package.json package-lock.json* ./
RUN npm install

# Stage para desarrollo Python
FROM python:3.11-slim AS development

# Variables de desarrollo
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    FLASK_ENV=development \
    FLASK_DEBUG=1

# Instalar dependencias del sistema
RUN apt-get update && apt-get install -y \
    --no-install-recommends \
    gcc \
    curl \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Instalar dependencias Python
COPY requirements.txt .
RUN pip install --upgrade pip && pip install -r requirements.txt

# Copiar Node.js y herramientas desde stage anterior
COPY --from=node-tools /usr/local/bin/node /usr/local/bin/
COPY --from=node-tools /usr/local/lib/node_modules /usr/local/lib/node_modules
COPY --from=node-tools /app/node_modules ./node_modules

# Crear enlaces simb√≥licos para npm
RUN ln -s /usr/local/lib/node_modules/npm/bin/npm-cli.js /usr/local/bin/npm

# Exponer puerto
EXPOSE 5000

# Comando por defecto para desarrollo
CMD ["flask", "run", "--host=0.0.0.0", "--port=5000", "--debug"]
